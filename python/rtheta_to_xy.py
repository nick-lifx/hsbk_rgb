#!/usr/bin/env python3
# generated by ../prepare/rtheta_to_xy_gen_py.py

# Copyright (c) 2020 Nick Downing
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import math
import numpy

XY_x = 0
XY_y = 1
N_XY = 2

RTHETA_r = 0
RTHETA_theta = 1
N_RTHETA = 2

# returns approximation to:
#   r * math.cos(theta), r * math.sin(theta)
# minimax error is up to 2.757668e-08 resp. 2.566821e-07 on domain [-pi/4, pi/4)
def rtheta_to_xy(rtheta):
  r = rtheta[RTHETA_r]
  theta = rtheta[RTHETA_theta]

  theta *= 6.3661977236758138e-01
  i = int(round(theta))
  theta -= i
  theta2 = theta * theta

  x = -2.0408352541482610e-02
  x = x * theta2 + 2.5359864411200672e-01
  x = x * theta2 - 1.2336970142479686e+00
  x = x * theta2 + 9.9999997242332284e-01

  y = 7.7471164126955136e-02
  y = y * theta2 - 6.4564354417725356e-01
  y = y * theta2 + 1.5707831542949620e+00
  y *= theta

  if i & 1:
    x, y = -y, x
  if i & 2:
    x = -x
    y = -y

  return r * numpy.array([x, y], numpy.double)

if __name__ == '__main__':
  import sys

  EXIT_SUCCESS = 0
  EXIT_FAILURE = 1

  if len(sys.argv) < 3:
    print(f'usage: {sys.argv[0]:s} x y')
    print('(r, theta) = polar coordinates, calculates (x, y) = Euclidean coordinates')
    sys.exit(EXIT_FAILURE)
  rtheta = numpy.array([float(i) for i in sys.argv[1:3]], numpy.double)

  xy = rtheta_to_xy(rtheta)
  print(f'rtheta ({rtheta[RTHETA_r]:.6f}, {rtheta[RTHETA_theta]:.6f}) -> xy ({xy[XY_x]:.6f}, {xy[XY_y]:.6f})')
